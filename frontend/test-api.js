// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints
const API_BASE = 'http://localhost:3000/api';

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...\n');
  
  try {
    // –¢–µ—Å—Ç 1: –õ–æ–∫–∞–ª—å–Ω—ã–π vite proxy
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ vite proxy:');
    const response1 = await fetch(`${API_BASE}/symbols`);
    console.log(`   /api/symbols: ${response1.status} ${response1.statusText}`);
    
    if (response1.ok) {
      const data1 = await response1.json();
      console.log(`   –î–∞–Ω–Ω—ã–µ: ${data1.length || 'N/A'} —Å–∏–º–≤–æ–ª–æ–≤`);
    }
    
    // –¢–µ—Å—Ç 2: Health check
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç health check:');
    const response2 = await fetch(`${API_BASE}/health`);
    console.log(`   /api/health: ${response2.status} ${response2.statusText}`);
    
    if (response2.ok) {
      const data2 = await response2.json();
      console.log(`   –°—Ç–∞—Ç—É—Å: ${JSON.stringify(data2)}`);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
  
  console.log('\nüìù –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Vercel:');
  console.log('   - –°–¥–µ–ª–∞—Ç—å commit –∏ push');
  console.log('   - –ù–∞ Vercel: Root Directory = frontend');
  console.log('   - –î–µ–ø–ª–æ–π —Å Clear Build Cache');
  console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å: https://fastapi-binance-calculations.vercel.app/api/test');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url === `file://${process.argv[1]}`) {
  testAPI();
}

export { testAPI };
