# FASTAPI BINANCE CALCULATIONS - –ü–û–õ–ù–´–ô –ö–û–î –ü–†–û–ï–ö–¢–ê

## üìã –û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ï–ö–¢–ê

–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö Binance API. –ü—Ä–æ–µ–∫—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ FastAPI backend –∏ React frontend —Å –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª—å—é –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä.

## üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–£–†–ê

### Backend (FastAPI + Clean Architecture)
- **FastAPI** - –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è API
- **Clean Architecture** - —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª–æ–∏ (models, repositories, services, API)
- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å** - –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ aiohttp
- **Docker** - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è AWS —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

### Frontend (React + Vite)
- **React 18** - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UI —Ñ—Ä–µ–π–º–≤–æ—Ä–∫
- **Vite** - –±—ã—Å—Ç—Ä—ã–π —Å–±–æ—Ä—â–∏–∫
- **CSS Modules** - –º–æ–¥—É–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
- **Vercel** - —Ö–æ—Å—Ç–∏–Ω–≥ frontend

### API Proxy
- **Vercel Functions** - –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ backend
- **CORS** - —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ cross-origin –∑–∞–ø—Ä–æ—Å–æ–≤
- **node-fetch** - HTTP –∫–ª–∏–µ–Ω—Ç –¥–ª—è Vercel Functions

## üöÄ –û–°–ù–û–í–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò

### 1. –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö USDT –ø–∞—Ä
- 24-—á–∞—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: —Ü–µ–Ω–∞, –∏–∑–º–µ–Ω–µ–Ω–∏–µ %, –æ–±—ä–µ–º, –¥–∏–∞–ø–∞–∑–æ–Ω
- –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø–∞—Ä—ã
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π –ø–∞—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

### 2. –ê–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
- –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏, –ø–æ—Ä–æ–≥, –∫–æ–º–∏—Å—Å–∏—è
- –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ (1m, 5m, 15m, 1h, 4h, 1d)
- –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –∞–Ω–∞–ª–∏–∑–∞ (–Ω–∞—á–∞–ª—å–Ω–∞—è –∏ –∫–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞)
- –°—Ç—Ä–∞—Ç–µ–≥–∏—è: –ø–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç

### 3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
- **Summary**: –∏—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–∞–Ω—Å, –ø—Ä–∏–±—ã–ª—å, ROI, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫
- **Trades Table**: –¥–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö —Å–¥–µ–ª–æ–∫ —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ —Ä—ã–Ω–∫–∞
- **Charts**: –≥—Ä–∞—Ñ–∏–∫–∏ –±–∞–ª–∞–Ω—Å–∞, —Ü–µ–Ω—ã –∏ –ø—Ä–∏–±—ã–ª–∏
- **Market Indicators**: BULL/BEAR –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Å–¥–µ–ª–∫–∏

### 4. –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä
- –°–µ–ºaphore (10) –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ 24-—á–∞—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ retry –ª–æ–≥–∏–∫–∞

## üìÅ –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê

```
fastapi_binance_calculations/
‚îú‚îÄ‚îÄ backend/
‚îÇ   ‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ api/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ investment_routes.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ models/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ investment_models.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ repositories/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ async_binance_repository.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ async_investment_analysis_service.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ date_utils.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ main.py
‚îÇ   ‚îú‚îÄ‚îÄ docker-compose.yml
‚îÇ   ‚îú‚îÄ‚îÄ Dockerfile
‚îÇ   ‚îú‚îÄ‚îÄ docker.bash
‚îÇ   ‚îú‚îÄ‚îÄ install.bash
‚îÇ   ‚îú‚îÄ‚îÄ requirements.txt
‚îÇ   ‚îî‚îÄ‚îÄ run.py
‚îú‚îÄ‚îÄ frontend/
‚îÇ   ‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ AnalysisResults/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Charts/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Summary/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ TradesTable/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ style.module.css
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ CurrencySelector/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ style.module.css
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ InvestmentForm/
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.jsx
‚îÇ   ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ style.module.css
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ MarketIndicator/
‚îÇ   ‚îÇ   ‚îÇ       ‚îú‚îÄ‚îÄ index.jsx
‚îÇ   ‚îÇ   ‚îÇ       ‚îî‚îÄ‚îÄ style.module.css
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ App.jsx
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.css
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ main.jsx
‚îÇ   ‚îú‚îÄ‚îÄ package.json
‚îÇ   ‚îú‚îÄ‚îÄ vercel.json
‚îÇ   ‚îî‚îÄ‚îÄ vite.config.js
‚îú‚îÄ‚îÄ api/
‚îÇ   ‚îú‚îÄ‚îÄ symbols.js
‚îÇ   ‚îú‚îÄ‚îÄ analyze.js
‚îÇ   ‚îú‚îÄ‚îÄ [...path].js
‚îÇ   ‚îî‚îÄ‚îÄ test.js
‚îú‚îÄ‚îÄ package.json
‚îî‚îÄ‚îÄ README.md
```

## üîß –ö–õ–Æ–ß–ï–í–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´

### Backend Models (Pydantic)
```python
class InvestmentParams(BaseModel):
    initial_balance: float = 10000
    trade_amount: float = 1000
    threshold_percent: float = 0.05
    commission_rate: float = 0.00075
    start_date: str
    end_date: str
    symbol: str = "ETHUSDT"
    interval: str = "1h"
    start_timestamp: Optional[int] = None
    end_timestamp: Optional[int] = None

class TradeRecord(BaseModel):
    order_id: str
    order_type: str
    date_time: str
    price: float
    eth_amount: float
    usdt_amount: float
    commission: float
    balance_after: float
    eth_balance_after: float
    level_price: float
    related_order_id: Optional[str]
    status: str
    profit: Optional[float]

class AnalysisResult(BaseModel):
    trades: List[TradeRecord]
    summary: dict
    chart_data: dict
```

### Async Binance Repository
```python
class AsyncBinanceRepository:
    def __init__(self):
        self.base_url = "https://api.binance.com/api/v3"
        self.session = None
        self.semaphore = asyncio.Semaphore(10)
    
    async def get_historical_price_data_parallel(self, start_time, end_time, symbol, interval):
        # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ —á–∞–Ω–∫–∞–º
        # –°–µ–ºaphore –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        
    async def get_available_symbols(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö USDT –ø–∞—Ä
        # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ 24-—á–∞—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
```

### Investment Analysis Service
```python
class AsyncInvestmentAnalysisService:
    async def analyze_investment_strategy(self, params: InvestmentParams):
        # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
        # –†–∞—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
        
    async def _execute_strategy_analysis(self, params, history_list):
        # –õ–æ–≥–∏–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:
        # 1. –ü–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã –Ω–∞ threshold_percent
        # 2. –ü—Ä–æ–¥–∞–∂–∞ –ø—Ä–∏ —Ä–æ—Å—Ç–µ —Ü–µ–Ω—ã –Ω–∞ threshold_percent
        # 3. –£—á–µ—Ç –∫–æ–º–∏—Å—Å–∏–π Binance
        # 4. –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –ø—Ä–∏–±—ã–ª–∏
```

### Frontend Components

#### CurrencySelector (–ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å)
- –ü–æ–∏—Å–∫ –ø–æ –≤–∞–ª—é—Ç–Ω—ã–º –ø–∞—Ä–∞–º
- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ 24-—á–∞—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π –ø–∞—Ä—ã
- Responsive –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

#### InvestmentForm (–§–æ—Ä–º–∞ –∞–Ω–∞–ª–∏–∑–∞)
- –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞—Ä—ã
- –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª–µ–π
- –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ –ø–æ–ª–µ–π

#### AnalysisResults (–†–µ–∑—É–ª—å—Ç–∞—Ç—ã)
- **Summary**: –∏—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **TradesTable**: –¥–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–¥–µ–ª–æ–∫ —Å MarketIndicator
- **Charts**: –≥—Ä–∞—Ñ–∏–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Recharts

#### MarketIndicator (–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä—ã–Ω–∫–∞)
- –ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
- BULL/BEAR/NEUTRAL —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–º–∞
- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
- –¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ

### Vercel Functions (API Proxy)

#### /api/symbols
```javascript
module.exports = async (req, res) => {
    // –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ GET –∑–∞–ø—Ä–æ—Å–∞ –∫ backend
    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä —Å 24-—á–∞—Å–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    // CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è cross-origin –∑–∞–ø—Ä–æ—Å–æ–≤
};
```

#### /api/analyze
```javascript
module.exports = async (req, res) => {
    // –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ POST –∑–∞–ø—Ä–æ—Å–∞ –∫ backend
    // –ê–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    // –ü–µ—Ä–µ–¥–∞—á–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
};
```

## üåê API ENDPOINTS

### Backend (AWS)
- `GET /` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API
- `GET /health` - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
- `POST /api/analyze` - –∞–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
- `GET /api/symbols` - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä

### Frontend (Vercel)
- `/api/symbols` - –ø—Ä–æ–∫—Å–∏ –∫ backend (Vercel Function)
- `/api/analyze` - –ø—Ä–æ–∫—Å–∏ –∫ backend (Vercel Function)
- `/api/test` - —Ç–µ—Å—Ç–æ–≤—ã–π endpoint

## üöÄ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï

### Backend (AWS)
```bash
cd backend
./docker.bash  # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker
# –∏–ª–∏
source venv/bin/activate
python run.py
```

### Frontend (Vercel)
```bash
cd frontend
npm install
npm run build
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ Vercel –ø—Ä–∏ push –≤ main
```

## üîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –ù–ê–°–¢–†–û–ô–ö–ò

### CORS Configuration
```python
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –†–∞–∑—Ä–µ—à–µ–Ω—ã –≤—Å–µ origins
    allow_credentials=False,  # –û—Ç–∫–ª—é—á–µ–Ω—ã credentials
    allow_methods=["*"],  # –í—Å–µ HTTP –º–µ—Ç–æ–¥—ã
    allow_headers=["*"],  # –í—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)
```

### Rate Limiting
- –°–µ–ºaphore (10) –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Binance
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –±–æ–ª—å—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —á–∞–Ω–∫–∏
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ retry –ª–æ–≥–∏–∫–∞

### Environment Variables
- `VITE_API_URL` - URL –¥–ª—è API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
- `PORT` - –ø–æ—Ä—Ç backend —Å–µ—Ä–≤–µ—Ä–∞
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ dev/production —Ä–µ–∂–∏–º–æ–≤

## üìä –î–ê–ù–ù–´–ï –ò –ú–ï–¢–†–ò–ö–ò

### –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
- **Binance API v3** - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–∞—Ö
- **Klines** - —Å–≤–µ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
- **24h Ticker** - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞

### –§–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö
- **Timestamps** - Unix timestamp –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
- **Prices** - —Ç–æ—á–Ω–æ—Å—Ç—å –¥–æ 6 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
- **Volumes** - –≤ –±–∞–∑–æ–≤–æ–π –≤–∞–ª—é—Ç–µ –ø–∞—Ä—ã
- **Percentages** - –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏ (0.05 = 5%)

### –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
- **Binance API** - 1200 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
- **Chunk size** - –º–∞–∫—Å–∏–º—É–º 1000 —Å–≤–µ—á–µ–π –∑–∞ –∑–∞–ø—Ä–æ—Å
- **Parallel requests** - –º–∞–∫—Å–∏–º—É–º 10 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

## üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï

### Backend Testing
```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
curl http://13.50.4.32:8000/health

# –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤
curl http://13.50.4.32:8000/api/symbols

# –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ (POST)
curl -X POST http://13.50.4.32:8000/api/analyze \
  -H "Content-Type: application/json" \
  -d '{"initial_balance": 10000, "trade_amount": 1000, ...}'
```

### Frontend Testing
```bash
# –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
cd frontend
npm run dev

# –°–±–æ—Ä–∫–∞ –¥–ª—è production
npm run build
npm run preview
```

## üîÑ –ñ–ò–ó–ù–ï–ù–ù–´–ô –¶–ò–ö–õ –†–ê–ó–†–ê–ë–û–¢–ö–ò

### Git Workflow
1. **Feature Branch** - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
2. **Development** - —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
3. **Pull Request** - –∫–æ–¥ —Ä–µ–≤—å—é –∏ merge –≤ main
4. **Auto Deploy** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –Ω–∞ Vercel

### CI/CD Pipeline
- **GitHub** - —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏—è–º–∏
- **Vercel** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π frontend
- **AWS** - —Ö–æ—Å—Ç–∏–Ω–≥ backend —Å Docker
- **GitHub Actions** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

## üìà –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨

### Backend Optimization
- **Async/Await** - –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
- **Parallel Processing** - –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
- **Connection Pooling** - –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ HTTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
- **Memory Management** - —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏

### Frontend Optimization
- **Code Splitting** - —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ —á–∞–Ω–∫–∏
- **Lazy Loading** - –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
- **CSS Modules** - –∏–∑–æ–ª—è—Ü–∏—è —Å—Ç–∏–ª–µ–π
- **Tree Shaking** - —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞

## üêõ –ò–ó–í–ï–°–¢–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –ò –†–ï–®–ï–ù–ò–Ø

### CORS Issues
- **–ü—Ä–æ–±–ª–µ–º–∞**: Mixed Content Policy (HTTPS ‚Üí HTTP)
- **–†–µ—à–µ–Ω–∏–µ**: Vercel Functions –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è API

### Rate Limiting
- **–ü—Ä–æ–±–ª–µ–º–∞**: –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–æ–≤ Binance API
- **–†–µ—à–µ–Ω–∏–µ**: –°–µ–ºaphore –∏ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ —á–∞–Ω–∫–∏

### Memory Usage
- **–ü—Ä–æ–±–ª–µ–º–∞**: –ë–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
- **–†–µ—à–µ–Ω–∏–µ**: –ü–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏

## üöÄ –ë–£–î–£–©–ò–ï –£–õ–£–ß–®–ï–ù–ò–Ø

### Backend
- [ ] –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Redis
- [ ] WebSocket –¥–ª—è real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
- [ ] –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
- [ ] –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### Frontend
- [ ] PWA (Progressive Web App)
- [ ] Offline —Ä–µ–∂–∏–º
- [ ] Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- [ ] –¢–µ–º–Ω–∞—è/—Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞

### Infrastructure
- [ ] HTTPS –Ω–∞ backend
- [ ] Load balancing
- [ ] Auto-scaling
- [ ] Backup –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ

## üìö –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø –ò –†–ï–°–£–†–°–´

### –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
- **FastAPI**: https://fastapi.tiangolo.com/
- **React**: https://reactjs.org/
- **Vite**: https://vitejs.dev/
- **Vercel**: https://vercel.com/
- **Binance API**: https://binance-docs.github.io/apidocs/

### –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
- **Clean Architecture**: https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html
- **Async Python**: https://docs.python.org/3/library/asyncio.html
- **CSS Modules**: https://github.com/css-modules/css-modules
- **Docker Compose**: https://docs.docker.com/compose/

## üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï

–ü—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ responsive –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Clean Architecture –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞, –∞ Vercel Functions —Ä–µ—à–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å CORS –∏ Mixed Content Policy.

–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∞ –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏.
